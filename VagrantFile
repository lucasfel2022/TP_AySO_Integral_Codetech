# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  # Configuración de la máquina 'testing'
  config.vm.define "testing" do |testing|
    testing.vm.box = "ubuntu/jammy64"
    testing.vm.hostname = "testing"
    testing.vm.network "private_network", :name => '', ip: "192.168.56.4"
    
    # Comparto la carpeta del host donde estoy parado contra la VM
    testing.vm.synced_folder 'compartido_testing/', '/home/vagrant/compartido', 
      owner: 'vagrant', group: 'vagrant'

    # Agregar la key privada de SSH
    testing.ssh.insert_key = true

    # Agregar discos extra
    testing.vm.disk :disk, size: "5GB", name: "#{testing.vm.hostname}_extra_storage_7"
    testing.vm.disk :disk, size: "3GB", name: "#{testing.vm.hostname}_extra_storage_8"
    testing.vm.disk :disk, size: "2GB", name: "#{testing.vm.hostname}_extra_storage_9"
    testing.vm.disk :disk, size: "1GB", name: "#{testing.vm.hostname}_extra_storage_10"

    # Configuración del proveedor VirtualBox
    testing.vm.provider "virtualbox" do |vb|
      vb.memory = "1024"
      vb.name = "testing"
      vb.cpus = 1
      vb.linked_clone = true
      vb.customize ['modifyvm', :id, '--graphicscontroller', 'vmsvga']      
    end    

    # Provisionamiento (comentado los scripts que no existen)
    # testing.vm.provision "shell", path: "script_Enable_ssh_password.sh"
    # testing.vm.provision "shell", path: "instala_paquetes.sh"

    # Provisionamiento con comandos inline (sin privilegios)
    config.vm.provision "shell", privileged: false, inline: <<-SHELL
      # Los comandos se ejecutan como vagrant

      mkdir -p /home/vagrant/repogit
      cd /home/vagrant/repogit
    SHELL
  end

  # Configuración de la máquina 'produccion'
  config.vm.define "produccion" do |produccion|
    produccion.vm.box = "generic/rhel9"
    produccion.vm.hostname = "produccion"
    produccion.vm.network "private_network", :name => '', ip: "192.168.56.5"
    
    # Comparto la carpeta del host donde estoy parado contra la VM
    produccion.vm.synced_folder 'compartido_produccion/', '/home/vagrant/compartido'

    # Agregar la key privada de SSH
    produccion.ssh.insert_key = true

    # Provisionamiento (comentado los scripts que no existen)
    # produccion.vm.provision "shell", path: "script_Enable_ssh_password.sh"

    # Configuración del proveedor VirtualBox
    produccion.vm.provider "virtualbox" do |vb2|
      vb2.memory = "1024"
      vb2.name = "produccion"
      vb2.cpus = 1
      vb2.linked_clone = true
      vb2.customize ['modifyvm', :id, '--graphicscontroller', 'vmsvga']
    end

    # Provisionamiento para instalar paquetes (sin los scripts mencionados)
    produccion.vm.provision "shell", inline: <<-SHELL
      sudo dnf install -y /home/vagrant/compartido/tree-1.8.0-10.el9.x86_64.rpm
      subscription-manager repos --enable codeready-builder-for-rhel-9-$(arch)-rpms
      dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
    SHELL
  end
end

